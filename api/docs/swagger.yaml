definitions:
  models.Branch:
    properties:
      address:
        type: string
      created_at:
        type: string
      founded_at:
        type: integer
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
      year:
        type: integer
    type: object
  models.CreateBranch:
    properties:
      address:
        type: string
      founded_at:
        type: integer
      name:
        type: string
    type: object
  models.CreateSales:
    properties:
      branch_id:
        type: string
      cashier_id:
        type: string
      client_name:
        type: string
      payment_type:
        description: card, cash
        type: string
      price:
        type: number
      shop_assistant_id:
        type: string
      status:
        description: success, cancel
        type: string
    type: object
  models.CreateStaff:
    properties:
      balance:
        type: number
      branch_id:
        type: string
      name:
        type: string
      staff_type:
        type: string
      tariff_id:
        type: string
    type: object
  models.CreateStaffTarif:
    properties:
      amount_for_card:
        type: number
      amount_for_cash:
        type: number
      name:
        type: string
      type:
        description: (fixed, percent)
        type: string
    type: object
  models.CreateTransaction:
    properties:
      amount:
        type: integer
      sale_id:
        type: string
      source_type:
        type: string
      staff_id:
        type: string
      text:
        type: string
      type:
        type: string
    type: object
  models.GetAllBranch:
    properties:
      branches:
        items:
          $ref: '#/definitions/models.Branch'
        type: array
      count:
        type: integer
    type: object
  models.GetAllSalesResponse:
    properties:
      count:
        type: integer
      sales:
        items:
          $ref: '#/definitions/models.Sales'
        type: array
    type: object
  models.GetAllStaff:
    properties:
      count:
        type: integer
      staffs:
        items:
          $ref: '#/definitions/models.Staff'
        type: array
    type: object
  models.GetAllStaffTarif:
    properties:
      count:
        type: integer
      staff_tarifs:
        items:
          $ref: '#/definitions/models.StaffTarif'
        type: array
    type: object
  models.GetAllTransactionResponse:
    properties:
      count:
        type: integer
      transactions:
        items:
          $ref: '#/definitions/models.Transaction'
        type: array
    type: object
  models.Sales:
    properties:
      branch_id:
        type: string
      cashier_id:
        type: string
      client_name:
        type: string
      created_at:
        type: string
      id:
        type: string
      payment_type:
        description: card, cash
        type: string
      price:
        type: number
      shop_assistant_id:
        type: string
      status:
        description: success, cancel
        type: string
      updated_at:
        type: string
    type: object
  models.Staff:
    properties:
      balance:
        type: number
      branch_id:
        type: string
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      staff_type:
        type: string
      tariff_id:
        type: string
      updated_at:
        type: string
    type: object
  models.StaffTarif:
    properties:
      amount_for_card:
        type: number
      amount_for_cash:
        type: number
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      type:
        description: (fixed, percent)
        type: string
      updated_at:
        type: string
    type: object
  models.Transaction:
    properties:
      amount:
        type: integer
      created_at:
        type: string
      id:
        type: string
      sale_id:
        type: string
      source_type:
        type: string
      staff_id:
        type: string
      text:
        type: string
      type:
        type: string
      updated_at:
        type: string
    type: object
  response.ErrorResp:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
info:
  contact: {}
paths:
  /branch:
    get:
      consumes:
      - application/json
      description: gets all branch based on limit, page and search by name
      parameters:
      - default: 10
        description: limit
        in: query
        minimum: 1
        name: limit
        type: integer
      - default: 1
        description: page
        in: query
        minimum: 1
        name: page
        type: integer
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllBranch'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: GET  ALL BRANCHS
      tags:
      - BRANCH
    post:
      consumes:
      - application/json
      description: CREATES BRANCH BASED ON GIVEN DATA
      parameters:
      - description: branch data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.CreateBranch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: CREATES BRANCH
      tags:
      - BRANCH
  /branch/{id}:
    delete:
      consumes:
      - application/json
      description: DELETES BRANCH BASED ON ID
      parameters:
      - description: id of branch
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: DELETE BRANCH BY ID
      tags:
      - BRANCH
    get:
      consumes:
      - application/json
      description: get branch by ID
      parameters:
      - description: Branch ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Branch'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: GET BY ID
      tags:
      - BRANCH
    put:
      consumes:
      - application/json
      description: UPDATES BRANCH BASED ON GIVEN DATA AND ID
      parameters:
      - description: id of branch
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: branch data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.CreateBranch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: UPDATE BRANCH BY ID
      tags:
      - BRANCH
  /sale:
    get:
      consumes:
      - application/json
      description: gets all sales based on limit, page and search by name
      parameters:
      - default: 10
        description: limit
        in: query
        minimum: 1
        name: limit
        type: integer
      - default: 1
        description: page
        in: query
        minimum: 1
        name: page
        type: integer
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllSalesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: GET  ALL SALES
      tags:
      - SALE
    post:
      consumes:
      - application/json
      description: CREATES SALE BASED ON GIVEN DATA
      parameters:
      - description: branch data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.CreateSales'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: CREATES SALE
      tags:
      - SALE
  /sale/{id}:
    delete:
      consumes:
      - application/json
      description: DELETES SALE BASED ON ID
      parameters:
      - description: id of sale
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: DELETE SALE BY ID
      tags:
      - SALE
    get:
      consumes:
      - application/json
      description: get sale by ID
      parameters:
      - description: Sale ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Sales'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: GET BY ID
      tags:
      - SALE
    put:
      consumes:
      - application/json
      description: UPDATES SALE BASED ON GIVEN DATA AND ID
      parameters:
      - description: id of sale
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: sale data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.Sales'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: UPDATE SALE BY ID
      tags:
      - SALE
  /staff:
    get:
      consumes:
      - application/json
      description: gets all staffs based on limit, page and search by name
      parameters:
      - default: 10
        description: limit
        in: query
        minimum: 1
        name: limit
        type: integer
      - default: 1
        description: page
        in: query
        minimum: 1
        name: page
        type: integer
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllStaff'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: GET  ALL STAFFS
      tags:
      - STAFF
    post:
      consumes:
      - application/json
      description: CREATES STAFF BASED ON GIVEN DATA
      parameters:
      - description: staff data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.CreateStaff'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: CREATES STAFF
      tags:
      - STAFF
  /staff/{id}:
    delete:
      consumes:
      - application/json
      description: DELETES STAFF BASED ON ID
      parameters:
      - description: id of staff
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: DELETE STAFF BY ID
      tags:
      - STAFF
    get:
      consumes:
      - application/json
      description: get staff by ID
      parameters:
      - description: Staff ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Staff'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: GET BY ID
      tags:
      - STAFF
    put:
      consumes:
      - application/json
      description: UPDATES STAFF BASED ON GIVEN DATA AND ID
      parameters:
      - description: id of staff
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: staff data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.CreateStaff'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: UPDATE STAFF BY ID
      tags:
      - STAFF
  /tariff:
    get:
      consumes:
      - application/json
      description: gets all tariff based on limit, page and search by name
      parameters:
      - default: 10
        description: limit
        in: query
        minimum: 1
        name: limit
        type: integer
      - default: 1
        description: page
        in: query
        minimum: 1
        name: page
        type: integer
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllStaffTarif'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: GET  ALL BRANCHS
      tags:
      - TARIFF
    post:
      consumes:
      - application/json
      description: CREATES TARIFF BASED ON GIVEN DATA
      parameters:
      - description: tariff data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.CreateStaffTarif'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: CREATES TARIFF
      tags:
      - TARIFF
  /tariff/{id}:
    delete:
      consumes:
      - application/json
      description: DELETES TARIFF BASED ON ID
      parameters:
      - description: id of tariff
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: DELETE TARIFF BY ID
      tags:
      - TARIFF
    get:
      consumes:
      - application/json
      description: get tariff by ID
      parameters:
      - description: Tariff ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.StaffTarif'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: GET BY ID
      tags:
      - TARIFF
    put:
      consumes:
      - application/json
      description: UPDATES TARIFF BASED ON GIVEN DATA AND ID
      parameters:
      - description: id of tariff
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: tariff data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.CreateStaffTarif'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: UPDATE TARIFF BY ID
      tags:
      - TARIFF
  /transaction:
    get:
      consumes:
      - application/json
      description: gets all transaction based on limit, page and search by name
      parameters:
      - default: 10
        description: limit
        in: query
        minimum: 1
        name: limit
        type: integer
      - default: 1
        description: page
        in: query
        minimum: 1
        name: page
        type: integer
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllTransactionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: GET  ALL TRANSACTION
      tags:
      - TRANSACTION
    post:
      consumes:
      - application/json
      description: CREATES TRANSACTION BASED ON GIVEN DATA
      parameters:
      - description: transaction data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.CreateTransaction'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: CREATES TRANSACTION
      tags:
      - TRANSACTION
  /transaction/{id}:
    delete:
      consumes:
      - application/json
      description: DELETES TRANSACTION BASED ON ID
      parameters:
      - description: id of transaction
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: DELETE TRANSACTION BY ID
      tags:
      - TRANSACTION
    get:
      consumes:
      - application/json
      description: get transaction by ID
      parameters:
      - description: Transaction ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Transaction'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: GET BY ID
      tags:
      - TRANSACTION
    put:
      consumes:
      - application/json
      description: UPDATES TRANSACTION BASED ON GIVEN DATA AND ID
      parameters:
      - description: id of transaction
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: transaction data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.CreateTransaction'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: UPDATE TRANSACTION BY ID
      tags:
      - TRANSACTION
swagger: "2.0"
